Linked Lists
- Singly linked lists have pointers to next node
- Doubly linked lists have pointers to next and previous nodes
- May use runner where two pointers iterate simultaneously

Binary Tree
- Have left, right and parent pointers
- Binary search trees good for searching
- Balanced binary trees are optimal

Graphs
- Implemented with adjacency matrices or lists
- Breadth first search searches neighbouring nodes first using a queue
- Depth first search searches one path first using an (implicit) stack via recursion

Stacks/Queues
- Stacks are last in first out (stack of plates)
- Queues are first in first out (queue of people)
- Can both be implemented with arrays/linked lists

Heaps
- Efficient implementation of priority queue (insert and extract min/max)
- Partially ordered using a binary tree where child elements are all greater/smaller than parent
- Binary tree can be implicitly stored in an array with each layer doubling in size
- To add elements, add to last position and swap with parent until high enough
- Min/max can be removed by replacing with last element and swapping with children until low enough
- These operations are linear with the height and logarithmic with number of nodes

Hash Tables
- Unordered map in C++
- Map keys to values using a hash function
- Constant time read/write operations in average case, linear in worst case

Merge Sort
- Splits array in half and recursively calls mergesort until only single elements are left
- Sorted smaller arrays are merged together by taking the smallest element of each sorted array repeatedly
- Merging is linear with with the number of elements and the recursion tree is log n deep
- Overall time complexity is n log n
- Linear space complexity as subarrays need to be created in each call

Quick Sort
- Randomly selects an element and swaps all lower elements to left and higher elements to right
- On average, there will be log n recursive calls, with linear work for each partition
- Average case time is n log n with log n space for calls on the stack
- Worst case time is n^2 with n space for calls on the stack

Tries


Vector Amortised Time
- Incorporates the linear time required to double the size of a vector and the constant time for most operations
- When inserting n elements, the vector doubles at sizes 1, 2, 4, ..., n in linear time
- This is equal to n + n/2 + n/4 + ... + 1 and is approximately equal to 2n
- Amortised (average) time to insert one element is constant

Bit Manipulation


Singleton Design Pattern
- Object with only one instance and global access
- Sometimes undesirable 'anti-pattern' and can interfere with unit testing
- Create a private static instance, public static getter that initialises it if necessary, private constructors and delete the copy constructor

Factory Design Pattern
- Interface for creating instances of a class
- Pass in specific type and the factory object will create the child object of the correct type
- Takes responsibility of object instantiation from the client program into the factory class

Union-Find


Quick Select


Balanced Binary Search Tree (AVL, Red Black Trees)


Minimum Spanning Tree


Dijkstra's Shortest Path


Bellman-Ford Pathfinding
